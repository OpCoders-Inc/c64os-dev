;----[ TOOLKIT.T ]----------------------LTKT     = $0100-(2*9)       ;9TH ÍODULEPUSHCTX¤ = 0;  ÐUSHES THE DRAW CONTEXT TO STACK;  ÍUST BE CALLED WITH ÊÓÒ, NEVER ÊÍÐPULLCTX¤ = 3;  ÐULLS THE DRAW CONTEXT FROM STACK;  ÍUST BE CALLED WITH ÊÓÒ, NEVER ÊÍÐSETCTX¤  = 6;  ÒEGÐTR -> ÐTR TO A DRAWCTX IN MEMORY;  ÃOPIES MEMORY TO THE DRAW CONTEXTRECONTEXT¤ = 9;  ÓTARTS WITH THE CURRENT CONTEXT AND;  MODIFIES AND SHRINKS IT FOR THE;  OFFSET AND SIZE OF THIS VIEW.;  THIS -> CURRENT NODEBOUNDSCHK¤ = 12;  ÃHECKS IF THE CURRENT VIEW FALLS AT;  LEAST PARTIALLY INSIDE THE CONTEXT'S;  CURRENT DRAWING REGION.;  THIS -> CURRENT NODE;  Ã <- ÓET ON OUT OF BOUNDS;  Ã <- ÃLR ON WITHIN BOUNDSSETTKENV¤ = 15;  ÓETS THE ÔOOLKIT ENVIRONMENT;  ÒEGÐTR -> ÔOOLKIT ENVIRONMENT STRUCT;---------------------------------------TKUPDATE¤ = 18;  ÃHECKS FOR DIRTY FLAG ON THE TOOLKIT;  ENVIRONMENT, AND THEN CALLS UPDATE ON;  THE ROOTVIEW. ÃLEARS ÔËÅ DIRTY FLAG.;  ÒEGÐTR -> ÔOOLKIT ÅNVIRONMENTTKMOUSE¤ = 21;  ÈIT TESTS AND CALLS HIT VIEW'S;  RESPONDER METHOD FOR THE EVENT TYPE;  ÒEGÐTR -> ÔOOLKIT ÅNVIRONMENT;  Ã <- ÃLR = ÅVENT WAS HANDLED;  Ã <- ÓET = ÅVENT NOT HANDLEDTKKCMD¤  = 24;  ÃALLS DOKEYEQV ON FIRST RESPONDER.;  ÒEGÐTR -> ÔOOLKIT ÅNVIRONMENT;  Ã <- ÃLR = ÅVENT WAS HANDLED;  Ã <- ÓET = ÅVENT NOT HANDLEDTKKPRNT¤ = 27;  ÃALLS KEYPRESS ON FIRST RESPONDER.;  ÒEGÐTR -> ÔOOLKIT ÅNVIRONMENT;  Ã <- ÃLR = ÅVENT WAS HANDLED;  Ã <- ÓET = ÅVENT NOT HANDLED;---------------------------------------CLASSLNK¤ = 30;  ÌINKS A DYNAMICALLY LOADED CLASS TO;  ITS SUPERCLASS.;  ÒEGÐTR -> ÃLASS TO BE LINKED;  CLASS  -> ÓUPERÃLASSCLASSPTR¤ = 33;  ÒETURNS CLASS PTR FROM A CLASSÉD;  Ø      -> CLASSÉD;  ÒEGÐTR <- ÃLASSTKNEW¤   = 36;  ÉNSTANTIATES A NEW OBJECT OF CLASS Ø;  ÒEGÐTR -> ÃLASS;  THIS   <- NEW INTANCE PTR;  CLASS  <- CLASS OF INSTANCE;  ÒEGÐTR <- NEW INTANCE PTRGETPROP16¤ = 39;  ÇET 16-BIT PROPERTY OF THIS;  THIS   -> OBJECT;  Ù      -> PROPERTY OFFSET;  ÒEG×RD <- PROPERTYPTRTHIS¤ = 42;  ÓET THIS TO A NEW POINTER.;  ÓET CLASS TO THIS.ISA (VIA FALLTHRU);  ÒEGÐTR -> OBJECT;  THIS   <- OBJECT;  CLASS  <- THIS.ISASETCLASS¤ = 45;  ÓET CLASS TO THIS.ISA;  THIS  -> OBJECT;  CLASS <- THIS.ISASETSUPER¤ = 48;  ÓET CLASS TO CLASS.SUPER;  CLASS -> CLASS;  CLASS <- CLASS.SUPERGETMETHOD¤ = 51;  ÇET METHOD POINTER FROM CLASS;  CLASS  -> CLASS;  Ù      -> METHOD OFFSET;  JMPVEC <- METHOD PTR;  ÒEGÐTR <- METHOD POINTER;---------------------------------------INSTANCEOF¤ = 54;  ÃHECK IF CLASS DESCENDS FROM CLASS;  CLASS  -> CLASS;  ÒEGÐTR -> CLASS;  Ã <- CLR = ÉT IS AN INSTANCE;  Ã <- SET = ÎOT AN INSTANCEWALK¤    = 57;  ÒECURSIVELY WALKS THE NODE TREE;  CALLS SYSJMP ON EACH NODE.;  THIS   -> CURRENT NODE;  JMPVEC -> ROUTINE TO CALL;  Á -> $2C = ÏNLY VISIBLE NODES;  Á -> $4C = ÔHE WHOLE NODE TREE;  Ã <- CLR = COMPLETED;  Ã <- SET = KEEP WALKINGISDESCOF¤ = 60;  ÓEARCHES UP THE VIEW HIERARCHY TO SEE;  IF THIS IS A NESTED CHILD OF THE VIEW;  PASSED IN.;  THIS   -> CURRENT NODE;  ÒEGÐTR -> POTENTIAL ANCESTOR VIEW;  Á <- 1=ÄESCENDS, 0=ÄOESÎOTÄESCEND;  Ú <- ÓET IF NOT A DESCENDANT;  Ú <- ÃLR IF IT DOES DESCENDOPAQANCS¤ = 63;  ÓEARCHES UP THE VIEW HIERARCHY FOR;  FIRST OPAQUE ANCESTOR. ÃOULD RETURN;  THIS, IF THIS IS OPAQUE.;  THIS   -> CURRENT NODE;  ÒEGÐTR <- OPAQUE ANCESTOR OF THISVIEWWTAG¤ = 66;  ÆINDS A VIEW THAT DESCENDS FROM THIS;  THAT BEARS A MATCHING TAG.;  THIS -> CURRENT NODE;  Á    -> A TAG TO SEARCH FORAPPENDTO¤ = 69;  ÔAKES A PARENT, TO WHICH THIS IS;  APPENDED, VIA THE PARENT'S ADDCHILD;  METHOD. ÔHIS IS LEFT UNCHANGED.;  THIS   -> CURRENT NODE;  ÒEGÐTR -> THIS'S NEW PARENT;  THIS   <- SAME THIS THAT WAS PASSED