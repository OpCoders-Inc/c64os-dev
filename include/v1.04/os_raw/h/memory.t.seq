;----[ MEMORY.T ]-----------------------LMEM     = $0100-(2*1)       ;1ST ÍODULEMEMCPY¤  = 0;  Á -> ÓOURCE PAGE ADDRESS;  Ù -> ÄEST PAGE ADDRESSMEMSET¤  = 3;  Á     -> ÆILL BYTE VALUE;  Ù     -> ÐAGE ADDRESS TO FILL;  Á/Ø/Ù <- ÓAME AS THE CAME IN.MEMFREE¤ = 6;  Ø <- ÎUMBER OF FREE PAGES;---------------------------------------FREE¤    = 9;  ÒEGÐTR -> POINTER TO MALLOC'D MEMORYMALLOC¤  = 12;  Á      -> ÍEMORY POOL (START PAGE);  ÒEG×RD -> 16-BIT LENGTH TO ALLOCATE;  Ã      <- ÓET ON ERROR;  ÒEGÐTR <- ÐOINTER TO START OF MEMORY;---------------------------------------PGFREE¤  = 15;  Ù -> ÐAGE ADDRESS TO FREE;  Ø -> ÎUMBER OF PAGES TO FREE;  Ã <- ÓET ON ERRORPGMARK¤  = 18;  Ø -> ÆIRST PAGE TO MARK;  Ù -> ÌAST  PAGE TO MARKPGALLOC¤ = 21;  Á -> ÁLLOCATION ÔYPE;  Ø -> ÎUMBER OF PAGES TO ALLOCATE;  Ù <- ÆIRST ALLOCATED PAGE ADDRESS;  Ã <- ÓET ON ERROR;---------------------------------------REUCONF¤ = 24;  ÒEGÐTR -> ÒÅÕ ÂANK/ÐAGE;  Á      -> ÃONFIG ÆLAGS;  Ã      <- ÓET ON ÎÏ ÒÅÕ AVAILABLE;  Á      <- # ÂANKS ÁVAILABLE TO ÁPPPGFETCH¤ = 27;  ÒEGÐTR -> Ã64 ÍEMORY ÂUFFER TO FETCH;  Ã      <- ÓET ON FAILURE TO FETCH;  Ã      <- ÃLR ON SUCCESSFUL FETCHPGSTASH¤ = 30;  ÒEGÐTR -> Ã64 ÍEMORY ÂUFFER TO STASH;  Ã      <- ÓET ON FAILURE TO STASH;  Ã      <- ÃLR ON SUCCESSFUL STASH;---------------------------------------;MEMORY.LIB ROUTINES (NOT IN ËÅÒÎÁÌ)REALLOC¤ = 3;  Á       -> ÍEMORY POOL (START PAGE);  ÒEGÐTR  -> ÐTR RETURNED FROM MALLOC;  MEMSIZE -> ÒESIZE TO 16-BIT LENGTH;  Ã       <- ÓET ON ERROR;  ÒEGÐTR  <- ÐOINTER TO RESIZED MEMORY